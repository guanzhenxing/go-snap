/*
Package boot 提供类似Spring Boot的自动配置框架，用于快速构建Go应用。

主要特性:
  - 自动配置: 根据配置文件自动初始化各种组件
  - 组件生命周期管理: 统一的组件启动、停止流程
  - 依赖注入: 自动处理组件之间的依赖关系
  - 条件配置: 支持基于条件的组件激活
  - 基于属性的配置: 从配置文件、环境变量等获取配置
  - 事件驱动: 支持应用生命周期事件和自定义事件

基本用法:

	bootApp := boot.NewBoot()
	bootApp.SetConfigPath("configs")
	bootApp.Run()

完整的组件包括:
  - 配置组件: 加载和管理配置
  - 日志组件: 提供日志记录功能
  - 数据库组件: 数据持久化
  - 缓存组件: 数据缓存
  - Web组件: Web服务器
*/
package boot
